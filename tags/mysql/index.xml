<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mysql on Gopherzhang</title>
    <link>https://driverzhang.github.io/tags/mysql/</link>
    <description>Recent content in Mysql on Gopherzhang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>All rights reserved 2016 - 2018</copyright>
    <lastBuildDate>Thu, 11 Jun 2020 22:56:29 +0800</lastBuildDate>
    
	<atom:link href="https://driverzhang.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何防止写出慢SQL之MySQL索引解析</title>
      <link>https://driverzhang.github.io/post/%E5%A6%82%E4%BD%95%E9%98%B2%E6%AD%A2%E5%86%99%E5%87%BA%E6%85%A2sql%E4%B9%8Bmysql%E7%B4%A2%E5%BC%95%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Thu, 11 Jun 2020 22:56:29 +0800</pubDate>
      
      <guid>https://driverzhang.github.io/post/%E5%A6%82%E4%BD%95%E9%98%B2%E6%AD%A2%E5%86%99%E5%87%BA%E6%85%A2sql%E4%B9%8Bmysql%E7%B4%A2%E5%BC%95%E8%A7%A3%E6%9E%90/</guid>
      <description>&lt;h2 id=&#34;先来给-mysql-中的-sql-定义个量变&#34;&gt;先来给 MySQL 中的 sql 定义个量变&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;慢 SQL 对数据库的影响，是一个量变到质变的过程，对“量”的把握，就很重要&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;一台单机 MySQL 数据库，大致处理能力的极限是，每秒一万条左右的简单 SQL，这里的“简单 SQL”，指的是类似于主键查询这种不需要遍历很多条记录的 SQL，这里的一万 TPS 是中位数的经验值，具体还是要看咋们的服务器是否给力。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQL之inner  join 和 left join、right join区别立</title>
      <link>https://driverzhang.github.io/post/sql%E4%B9%8Binner-join-%E5%92%8C-left-joinright-join%E5%8C%BA%E5%88%AB%E7%AB%8B/</link>
      <pubDate>Mon, 29 Jan 2018 20:03:12 +0000</pubDate>
      
      <guid>https://driverzhang.github.io/post/sql%E4%B9%8Binner-join-%E5%92%8C-left-joinright-join%E5%8C%BA%E5%88%AB%E7%AB%8B/</guid>
      <description>&lt;h1 id=&#34;inner-join-和-left-join-right-join区别&#34;&gt;inner join 和 left join、right join区别&lt;/h1&gt;

&lt;h3 id=&#34;简单一句话先总结-inner-join-只返回两表条件相同的数据行-其余两个分别以左-右表为基准返回各自基准表的全部数据行-未满足条件部分以-null-返回填入&#34;&gt;简单一句话先总结：inner join 只返回两表条件相同的数据行，其余两个分别以左、右表为基准返回各自基准表的全部数据行，未满足条件部分以 null 返回填入！&lt;/h3&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>