<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>设计模式 on Gopherzhang</title>
    <link>https://driverzhang.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
    <description>Recent content in 设计模式 on Gopherzhang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>All rights reserved 2016 - 2018</copyright>
    <lastBuildDate>Sat, 29 Aug 2020 15:39:40 +0800</lastBuildDate>
    
	<atom:link href="https://driverzhang.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang利用策略模式优化if…else和switch</title>
      <link>https://driverzhang.github.io/post/golang%E5%88%A9%E7%94%A8%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E4%BC%98%E5%8C%96ifelse%E5%92%8Cswitch/</link>
      <pubDate>Sat, 29 Aug 2020 15:39:40 +0800</pubDate>
      
      <guid>https://driverzhang.github.io/post/golang%E5%88%A9%E7%94%A8%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E4%BC%98%E5%8C%96ifelse%E5%92%8Cswitch/</guid>
      <description>&lt;p&gt;都知道大量 if else 对代码维护和设计都及其不友好，即便是你换成 switch 也并不那么理想，这里推荐主要利用策略模式优化。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;需求：比如有20个甚至更多的消息模板，每个模板ID 对应要操作都可能不一样，比如文案，参数计算等。如果一个一个去独立写对应函数然后if else继续条件流程调用显得格外鸡肋，那么请用策略模式优化吧。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>